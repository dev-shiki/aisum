{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nimport _imports_0 from '@/assets/loading-animation.gif';\nconst _hoisted_1 = {\n  class: \"upload-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = {\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Upload File MP3 untuk Ringkasan\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    accept: \".mp3\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args))\n  }, null, 32 /* NEED_HYDRATION */), _createCommentVNode(\" Loading Animation \"), $data.isUploading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[1] || (_cache[1] = [_createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"Loading...\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"Proses sedang berjalan...\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Menampilkan Status Proses \"), $data.uploadStatus ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, _toDisplayString($data.uploadStatus.message), 1 /* TEXT */), $data.uploadStatus.status === 'completed' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"Ringkasan:\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($data.uploadStatus.summary), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $data.uploadStatus.status === 'failed' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"p\", _hoisted_6, \"Proses gagal: \" + _toDisplayString($data.uploadStatus.error), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_imports_0","class","key","style","_createElementBlock","_hoisted_1","_createElementVNode","type","accept","onChange","_cache","args","$options","handleFileUpload","_createCommentVNode","$data","isUploading","_hoisted_2","src","alt","uploadStatus","_hoisted_3","_toDisplayString","message","status","_hoisted_4","summary","_hoisted_5","_hoisted_6","error"],"sources":["D:\\app\\meeting-summarizer\\src\\components\\FileUpload.vue"],"sourcesContent":["<template>\r\n    <div class=\"upload-container\">\r\n      <h2>Upload File MP3 untuk Ringkasan</h2>\r\n      <input type=\"file\" accept=\".mp3\" @change=\"handleFileUpload\" />\r\n  \r\n      <!-- Loading Animation -->\r\n      <div v-if=\"isUploading\" class=\"loading-container\">\r\n        <img src=\"@/assets/loading-animation.gif\" alt=\"Loading...\" />\r\n        <p>Proses sedang berjalan...</p>\r\n      </div>\r\n  \r\n      <!-- Menampilkan Status Proses -->\r\n      <div v-if=\"uploadStatus\">\r\n        <p>{{ uploadStatus.message }}</p>\r\n        <div v-if=\"uploadStatus.status === 'completed'\">\r\n          <h3>Ringkasan:</h3>\r\n          <p>{{ uploadStatus.summary }}</p>\r\n        </div>\r\n        <div v-if=\"uploadStatus.status === 'failed'\">\r\n          <p style=\"color: red;\">Proses gagal: {{ uploadStatus.error }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        file: null,\r\n        isUploading: false,\r\n        uploadStatus: null,\r\n        retryCount: 0, // Menghitung jumlah percobaan ulang\r\n      };\r\n    },\r\n    methods: {\r\n      async handleFileUpload(event) {\r\n        const file = event.target.files[0];\r\n        if (file && file.type === \"audio/mp3\") {\r\n          this.file = file;\r\n          this.uploadFile();\r\n        } else {\r\n          alert(\"Hanya file MP3 yang didukung.\");\r\n        }\r\n      },\r\n  \r\n      async uploadFile() {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", this.file);\r\n  \r\n        this.isUploading = true;\r\n        this.uploadStatus = null;\r\n        this.retryCount = 0; // Reset retry count\r\n  \r\n        try {\r\n          // Kirim file ke backend untuk diproses\r\n          const response = await this.$axios.post(\"/summarize/\", formData, {\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          });\r\n          \r\n          // Memeriksa status berdasarkan task_id\r\n          this.checkStatus(response.data.task_id);\r\n        } catch (error) {\r\n          this.isUploading = false;\r\n          console.error(\"Upload failed:\", error);\r\n          this.uploadStatus = {\r\n            status: \"failed\",\r\n            message: \"Terjadi kesalahan saat mengunggah file.\",\r\n            error: error.message,\r\n          };\r\n        }\r\n      },\r\n  \r\n      async checkStatus(taskId) {\r\n        const interval = setInterval(async () => {\r\n          try {\r\n            // Cek status pemrosesan berdasarkan task_id\r\n            const statusResponse = await this.$axios.get(`/summarize/status/${taskId}`);\r\n            const status = statusResponse.data;\r\n  \r\n            if (status.status === \"completed\") {\r\n              clearInterval(interval);\r\n              this.isUploading = false;\r\n              this.uploadStatus = {\r\n                status: \"completed\",\r\n                message: \"Ringkasan selesai!\",\r\n                summary: status.final_summary,\r\n              };\r\n            } else if (status.status === \"failed\") {\r\n              clearInterval(interval);\r\n              this.isUploading = false;\r\n              this.uploadStatus = {\r\n                status: \"failed\",\r\n                message: \"Proses gagal, coba lagi nanti.\",\r\n                error: status.error || \"Unknown error\",\r\n              };\r\n            } else {\r\n              this.uploadStatus = { status: status.status, message: status.message };\r\n              if (status.message && status.message.includes(\"Rate limit exceeded\") && this.retryCount < 5) {\r\n                // Jika terkena rate limit, coba lagi setelah beberapa detik\r\n                this.retryCount++;\r\n                console.log(`Rate limit exceeded, retrying in ${Math.pow(2, this.retryCount)} seconds...`);\r\n              }\r\n            }\r\n          } catch (error) {\r\n            clearInterval(interval);\r\n            this.isUploading = false;\r\n            console.error(\"Error fetching status:\", error);\r\n            this.uploadStatus = {\r\n              status: \"failed\",\r\n              message: \"Terjadi kesalahan saat memeriksa status.\",\r\n              error: error.message,\r\n            };\r\n          }\r\n        }, 3000); // Mengecek status setiap 3 detik\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .upload-container {\r\n    text-align: center;\r\n    margin: 50px auto;\r\n    max-width: 600px;\r\n    padding: 20px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 10px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  input[type=\"file\"] {\r\n    padding: 10px;\r\n    margin: 20px 0;\r\n  }\r\n  \r\n  .loading-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  h2 {\r\n    color: #333;\r\n  }\r\n  \r\n  p {\r\n    color: #555;\r\n  }\r\n  \r\n  h3 {\r\n    font-size: 1.2rem;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  img {\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n  </style>\r\n  "],"mappings":";OAOaA,UAAoC;;EANxCC,KAAK,EAAC;AAAkB;;EADjCC,GAAA;EAM8BD,KAAK,EAAC;;;EANpCC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAmBaC,KAAmB,EAAnB;IAAA;EAAA;AAAmB;;uBAlB5BC,mBAAA,CAqBM,OArBNC,UAqBM,G,0BApBJC,mBAAA,CAAwC,YAApC,iCAA+B,sBACnCA,mBAAA,CAA8D;IAAvDC,IAAI,EAAC,MAAM;IAACC,MAAM,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;qCAE1DG,mBAAA,uBAA0B,EACfC,KAAA,CAAAC,WAAW,I,cAAtBZ,mBAAA,CAGM,OAHNa,UAGM,EAAAP,MAAA,QAAAA,MAAA,OAFJJ,mBAAA,CAA6D;IAAxDY,GAAoC,EAApClB,UAAoC;IAACmB,GAAG,EAAC;8BAC9Cb,mBAAA,CAAgC,WAA7B,2BAAyB,oB,MARpCQ,mBAAA,gBAWMA,mBAAA,+BAAkC,EACvBC,KAAA,CAAAK,YAAY,I,cAAvBhB,mBAAA,CASM,OArBZiB,UAAA,GAaQf,mBAAA,CAAiC,WAAAgB,gBAAA,CAA3BP,KAAA,CAAAK,YAAY,CAACG,OAAO,kBACfR,KAAA,CAAAK,YAAY,CAACI,MAAM,oB,cAA9BpB,mBAAA,CAGM,OAjBdqB,UAAA,G,0BAeUnB,mBAAA,CAAmB,YAAf,YAAU,sBACdA,mBAAA,CAAiC,WAAAgB,gBAAA,CAA3BP,KAAA,CAAAK,YAAY,CAACM,OAAO,iB,KAhBpCZ,mBAAA,gBAkBmBC,KAAA,CAAAK,YAAY,CAACI,MAAM,iB,cAA9BpB,mBAAA,CAEM,OApBduB,UAAA,GAmBUrB,mBAAA,CAAiE,KAAjEsB,UAAiE,EAA1C,gBAAc,GAAAN,gBAAA,CAAGP,KAAA,CAAAK,YAAY,CAACS,KAAK,iB,KAnBpEf,mBAAA,e,KAAAA,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
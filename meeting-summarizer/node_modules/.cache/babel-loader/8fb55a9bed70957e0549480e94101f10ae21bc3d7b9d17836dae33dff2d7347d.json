{"ast":null,"code":"import api from \"../api/axios\";\nimport UploadBox from \"../components/UploadBox.vue\";\nimport SummaryDisplay from \"../components/SummaryDisplay.vue\";\nimport LoadingSpinner from \"../components/LoadingSpinner.vue\";\nexport default {\n  components: {\n    UploadBox,\n    SummaryDisplay,\n    LoadingSpinner\n  },\n  data() {\n    return {\n      isProcessing: false,\n      isLongProcessing: false,\n      isDelayed: false,\n      // Status jika API mengalami delay akibat Rate Limit\n      errorMessage: \"\",\n      transcription: \"\",\n      summary: \"\",\n      finalSummary: \"\",\n      requestId: null,\n      pollingInterval: null,\n      elapsedTime: 0,\n      maxWaitTime: 600 // Maksimal 10 menit tunggu sebelum timeout\n    };\n  },\n  methods: {\n    async handleFileUpload(file) {\n      // Reset status sebelum upload baru\n      this.isProcessing = true;\n      this.isLongProcessing = false;\n      this.isDelayed = false;\n      this.errorMessage = \"\";\n      this.transcription = \"\";\n      this.summary = \"\";\n      this.finalSummary = \"\";\n      this.requestId = null;\n      this.elapsedTime = 0;\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      try {\n        const response = await api.post(\"/summarize/\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        console.log(\"üì° Response dari Backend:\", response.data);\n        if (response.data.error) {\n          this.errorMessage = response.data.error;\n          this.isProcessing = false;\n        } else {\n          this.requestId = response.data.task_id;\n          console.log(\"üÜî Task ID:\", this.requestId);\n          this.pollBackendStatus();\n        }\n      } catch (error) {\n        console.error(\"‚ùå Error uploading file:\", error);\n        this.errorMessage = \"‚ö†Ô∏è Server sedang sibuk. Mohon tunggu...\";\n        this.isProcessing = false;\n      }\n    },\n    async pollBackendStatus() {\n      console.log(\"üîÑ Memulai polling status...\");\n      if (!this.requestId) {\n        console.warn(\"‚ö†Ô∏è requestId tidak ditemukan, polling dihentikan.\");\n        return;\n      }\n      this.pollingInterval = setInterval(async () => {\n        try {\n          console.log(`üîé Memeriksa status dari backend (task_id: ${this.requestId})`);\n          const statusResponse = await api.get(`/summarize/status/${this.requestId}`);\n          console.log(\"üì° Polling Response:\", statusResponse.data);\n          if (statusResponse.data.status === \"completed\") {\n            console.log(\"‚úÖ Pemrosesan selesai! Menampilkan hasil...\");\n            this.transcription = statusResponse.data.transcription;\n            this.summary = statusResponse.data.summary;\n            this.finalSummary = statusResponse.data.final_summary;\n            this.isProcessing = false;\n            clearInterval(this.pollingInterval);\n            this.pollingInterval = null;\n          } else if (statusResponse.data.status === \"failed\") {\n            console.error(\"‚ùå Pemrosesan gagal:\", statusResponse.data.error);\n            this.isProcessing = false;\n            this.errorMessage = \"‚ùå Terjadi kesalahan dalam pemrosesan.\";\n            clearInterval(this.pollingInterval);\n            this.pollingInterval = null;\n          } else if (statusResponse.data.status === \"delayed\") {\n            this.isDelayed = true;\n          }\n\n          // Jika status masih \"processing\", lanjutkan polling\n          this.elapsedTime += 5;\n          if (this.elapsedTime >= 60) {\n            this.isLongProcessing = true; // Tampilkan peringatan jika lebih dari 1 menit\n          }\n          if (this.elapsedTime >= this.maxWaitTime) {\n            this.isProcessing = false;\n            this.errorMessage = \"‚ùå Waktu tunggu habis. Coba unggah ulang file.\";\n            clearInterval(this.pollingInterval);\n          }\n        } catch (error) {\n          console.error(\"‚ùå Error checking status:\", error);\n        }\n      }, 5000);\n    },\n    cancelProcessing() {\n      if (this.pollingInterval) {\n        clearInterval(this.pollingInterval);\n        this.pollingInterval = null;\n      }\n      this.isProcessing = false;\n      this.errorMessage = \"‚ö†Ô∏è Pemrosesan dibatalkan.\";\n      this.requestId = null;\n    }\n  }\n};","map":{"version":3,"names":["api","UploadBox","SummaryDisplay","LoadingSpinner","components","data","isProcessing","isLongProcessing","isDelayed","errorMessage","transcription","summary","finalSummary","requestId","pollingInterval","elapsedTime","maxWaitTime","methods","handleFileUpload","file","formData","FormData","append","response","post","headers","console","log","error","task_id","pollBackendStatus","warn","setInterval","statusResponse","get","status","final_summary","clearInterval","cancelProcessing"],"sources":["D:\\app\\meeting-summarizer\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <!-- Upload File -->\r\n      <UploadBox @file-selected=\"handleFileUpload\" />\r\n  \r\n      <!-- Animasi Loading & Pesan Status -->\r\n      <LoadingSpinner v-if=\"isProcessing\" />\r\n      <p v-if=\"isProcessing\" class=\"processing-message\">‚è≥ Pemrosesan sedang berjalan...</p>\r\n      <p v-if=\"isLongProcessing\" class=\"warning-message\">‚ö†Ô∏è Masih dalam antrian... Mohon tunggu.</p>\r\n      <p v-if=\"isDelayed\" class=\"delayed-message\">‚è≥ Menunggu API Response... Backend sedang menangani permintaan.</p>\r\n      <p v-if=\"errorMessage\" class=\"error-message\">‚ùå {{ errorMessage }}</p>\r\n  \r\n      <!-- Tombol Batalkan -->\r\n      <button v-if=\"isProcessing\" @click=\"cancelProcessing\" class=\"cancel-button\">\r\n        ‚ùå Batalkan\r\n      </button>\r\n  \r\n      <!-- Output Ringkasan -->\r\n      <SummaryDisplay\r\n        v-if=\"summary && !isProcessing\"\r\n        :transcription=\"transcription\"\r\n        :summary=\"summary\"\r\n        :finalSummary=\"finalSummary\"\r\n      />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import api from \"../api/axios\";\r\n  import UploadBox from \"../components/UploadBox.vue\";\r\n  import SummaryDisplay from \"../components/SummaryDisplay.vue\";\r\n  import LoadingSpinner from \"../components/LoadingSpinner.vue\";\r\n  \r\n  export default {\r\n    components: {\r\n      UploadBox,\r\n      SummaryDisplay,\r\n      LoadingSpinner,\r\n    },\r\n    data() {\r\n      return {\r\n        isProcessing: false,\r\n        isLongProcessing: false,\r\n        isDelayed: false, // Status jika API mengalami delay akibat Rate Limit\r\n        errorMessage: \"\",\r\n        transcription: \"\",\r\n        summary: \"\",\r\n        finalSummary: \"\",\r\n        requestId: null,\r\n        pollingInterval: null,\r\n        elapsedTime: 0,\r\n        maxWaitTime: 600, // Maksimal 10 menit tunggu sebelum timeout\r\n      };\r\n    },\r\n    methods: {\r\n      async handleFileUpload(file) {\r\n        // Reset status sebelum upload baru\r\n        this.isProcessing = true;\r\n        this.isLongProcessing = false;\r\n        this.isDelayed = false;\r\n        this.errorMessage = \"\";\r\n        this.transcription = \"\";\r\n        this.summary = \"\";\r\n        this.finalSummary = \"\";\r\n        this.requestId = null;\r\n        this.elapsedTime = 0;\r\n  \r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n  \r\n        try {\r\n          const response = await api.post(\"/summarize/\", formData, {\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          });\r\n  \r\n          console.log(\"üì° Response dari Backend:\", response.data);\r\n  \r\n          if (response.data.error) {\r\n            this.errorMessage = response.data.error;\r\n            this.isProcessing = false;\r\n          } else {\r\n            this.requestId = response.data.task_id;\r\n            console.log(\"üÜî Task ID:\", this.requestId);\r\n            this.pollBackendStatus();\r\n          }\r\n        } catch (error) {\r\n          console.error(\"‚ùå Error uploading file:\", error);\r\n          this.errorMessage = \"‚ö†Ô∏è Server sedang sibuk. Mohon tunggu...\";\r\n          this.isProcessing = false;\r\n        }\r\n      },\r\n  \r\n      async pollBackendStatus() {\r\n        console.log(\"üîÑ Memulai polling status...\");\r\n  \r\n        if (!this.requestId) {\r\n          console.warn(\"‚ö†Ô∏è requestId tidak ditemukan, polling dihentikan.\");\r\n          return;\r\n        }\r\n  \r\n        this.pollingInterval = setInterval(async () => {\r\n          try {\r\n            console.log(`üîé Memeriksa status dari backend (task_id: ${this.requestId})`);\r\n            const statusResponse = await api.get(`/summarize/status/${this.requestId}`);\r\n  \r\n            console.log(\"üì° Polling Response:\", statusResponse.data);\r\n  \r\n            if (statusResponse.data.status === \"completed\") {\r\n              console.log(\"‚úÖ Pemrosesan selesai! Menampilkan hasil...\");\r\n              this.transcription = statusResponse.data.transcription;\r\n              this.summary = statusResponse.data.summary;\r\n              this.finalSummary = statusResponse.data.final_summary;\r\n  \r\n              this.isProcessing = false;\r\n              clearInterval(this.pollingInterval);\r\n              this.pollingInterval = null;\r\n            } else if (statusResponse.data.status === \"failed\") {\r\n              console.error(\"‚ùå Pemrosesan gagal:\", statusResponse.data.error);\r\n              this.isProcessing = false;\r\n              this.errorMessage = \"‚ùå Terjadi kesalahan dalam pemrosesan.\";\r\n              clearInterval(this.pollingInterval);\r\n              this.pollingInterval = null;\r\n            } else if (statusResponse.data.status === \"delayed\") {\r\n              this.isDelayed = true;\r\n            }\r\n  \r\n            // Jika status masih \"processing\", lanjutkan polling\r\n            this.elapsedTime += 5;\r\n            if (this.elapsedTime >= 60) {\r\n              this.isLongProcessing = true; // Tampilkan peringatan jika lebih dari 1 menit\r\n            }\r\n            if (this.elapsedTime >= this.maxWaitTime) {\r\n              this.isProcessing = false;\r\n              this.errorMessage = \"‚ùå Waktu tunggu habis. Coba unggah ulang file.\";\r\n              clearInterval(this.pollingInterval);\r\n            }\r\n          } catch (error) {\r\n            console.error(\"‚ùå Error checking status:\", error);\r\n          }\r\n        }, 5000);\r\n      },\r\n  \r\n      cancelProcessing() {\r\n        if (this.pollingInterval) {\r\n          clearInterval(this.pollingInterval);\r\n          this.pollingInterval = null;\r\n        }\r\n        this.isProcessing = false;\r\n        this.errorMessage = \"‚ö†Ô∏è Pemrosesan dibatalkan.\";\r\n        this.requestId = null;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .container {\r\n    text-align: center;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .processing-message {\r\n    color: #ff9800;\r\n    font-weight: bold;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .warning-message {\r\n    color: #d17b00;\r\n    font-weight: bold;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .delayed-message {\r\n    color: #007bff;\r\n    font-weight: bold;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .error-message {\r\n    color: red;\r\n    font-weight: bold;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .cancel-button {\r\n    background-color: red;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n    cursor: pointer;\r\n    border-radius: 5px;\r\n    font-size: 16px;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
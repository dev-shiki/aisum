{"ast":null,"code":"import api from \"../api/axios\";\nimport UploadBox from \"../components/UploadBox.vue\";\nimport SummaryDisplay from \"../components/SummaryDisplay.vue\";\nimport LoadingSpinner from \"../components/LoadingSpinner.vue\";\nexport default {\n  components: {\n    UploadBox,\n    SummaryDisplay,\n    LoadingSpinner\n  },\n  data() {\n    return {\n      isProcessing: false,\n      errorMessage: \"\",\n      transcription: \"\",\n      summary: \"\",\n      finalSummary: \"\",\n      requestId: null\n    };\n  },\n  methods: {\n    async handleFileUpload(file) {\n      this.isProcessing = true;\n      this.errorMessage = \"\";\n      this.transcription = \"\";\n      this.summary = \"\";\n      this.finalSummary = \"\";\n      this.requestId = null;\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      try {\n        const response = await api.post(\"/summarize/\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        if (response.data.task_id) {\n          this.requestId = response.data.task_id;\n          this.pollBackendStatus();\n        } else {\n          this.isProcessing = false;\n          this.errorMessage = \"❌ Terjadi kesalahan.\";\n        }\n      } catch (error) {\n        console.error(\"❌ Error uploading file:\", error);\n        this.isProcessing = false;\n        this.errorMessage = \"⚠️ Server sedang sibuk. Mohon tunggu...\";\n      }\n    },\n    async pollBackendStatus() {\n      const interval = setInterval(async () => {\n        try {\n          const statusResponse = await api.get(`/summarize/status/${this.requestId}`);\n          if (statusResponse.data.status === \"completed\") {\n            this.transcription = statusResponse.data.transcription;\n            this.summary = statusResponse.data.summary;\n            this.finalSummary = statusResponse.data.final_summary;\n            this.isProcessing = false;\n            clearInterval(interval);\n          }\n        } catch (error) {\n          console.error(\"❌ Error checking status:\", error);\n        }\n      }, 5000); // Polling setiap 5 detik\n    }\n  }\n};","map":{"version":3,"names":["api","UploadBox","SummaryDisplay","LoadingSpinner","components","data","isProcessing","errorMessage","transcription","summary","finalSummary","requestId","methods","handleFileUpload","file","formData","FormData","append","response","post","headers","task_id","pollBackendStatus","error","console","interval","setInterval","statusResponse","get","status","final_summary","clearInterval"],"sources":["D:\\app\\meeting-summarizer\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <!-- Upload File -->\r\n      <UploadBox @file-selected=\"handleFileUpload\" />\r\n  \r\n      <!-- Animasi Loading -->\r\n      <LoadingSpinner v-if=\"isProcessing\" />\r\n      <p v-if=\"isProcessing\" class=\"processing-message\">⏳ Pemrosesan sedang berlangsung...</p>\r\n  \r\n      <!-- Output Ringkasan -->\r\n      <SummaryDisplay\r\n        v-if=\"summary && !isProcessing\"\r\n        :transcription=\"transcription\"\r\n        :summary=\"summary\"\r\n        :finalSummary=\"finalSummary\"\r\n      />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import api from \"../api/axios\";\r\n  import UploadBox from \"../components/UploadBox.vue\";\r\n  import SummaryDisplay from \"../components/SummaryDisplay.vue\";\r\n  import LoadingSpinner from \"../components/LoadingSpinner.vue\";\r\n  \r\n  export default {\r\n    components: {\r\n      UploadBox,\r\n      SummaryDisplay,\r\n      LoadingSpinner,\r\n    },\r\n    data() {\r\n      return {\r\n        isProcessing: false,\r\n        errorMessage: \"\",\r\n        transcription: \"\",\r\n        summary: \"\",\r\n        finalSummary: \"\",\r\n        requestId: null,\r\n      };\r\n    },\r\n    methods: {\r\n      async handleFileUpload(file) {\r\n        this.isProcessing = true;\r\n        this.errorMessage = \"\";\r\n        this.transcription = \"\";\r\n        this.summary = \"\";\r\n        this.finalSummary = \"\";\r\n        this.requestId = null;\r\n  \r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n  \r\n        try {\r\n          const response = await api.post(\"/summarize/\", formData, {\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          });\r\n  \r\n          if (response.data.task_id) {\r\n            this.requestId = response.data.task_id;\r\n            this.pollBackendStatus();\r\n          } else {\r\n            this.isProcessing = false;\r\n            this.errorMessage = \"❌ Terjadi kesalahan.\";\r\n          }\r\n        } catch (error) {\r\n          console.error(\"❌ Error uploading file:\", error);\r\n          this.isProcessing = false;\r\n          this.errorMessage = \"⚠️ Server sedang sibuk. Mohon tunggu...\";\r\n        }\r\n      },\r\n  \r\n      async pollBackendStatus() {\r\n        const interval = setInterval(async () => {\r\n          try {\r\n            const statusResponse = await api.get(`/summarize/status/${this.requestId}`);\r\n  \r\n            if (statusResponse.data.status === \"completed\") {\r\n              this.transcription = statusResponse.data.transcription;\r\n              this.summary = statusResponse.data.summary;\r\n              this.finalSummary = statusResponse.data.final_summary;\r\n  \r\n              this.isProcessing = false;\r\n              clearInterval(interval);\r\n            }\r\n          } catch (error) {\r\n            console.error(\"❌ Error checking status:\", error);\r\n          }\r\n        }, 5000); // Polling setiap 5 detik\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .container {\r\n    text-align: center;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .processing-message {\r\n    color: #ff9800;\r\n    font-weight: bold;\r\n    margin-top: 10px;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAoBE,OAAOA,GAAE,MAAO,cAAc;AAC9B,OAAOC,SAAQ,MAAO,6BAA6B;AACnD,OAAOC,cAAa,MAAO,kCAAkC;AAC7D,OAAOC,cAAa,MAAO,kCAAkC;AAE7D,eAAe;EACbC,UAAU,EAAE;IACVH,SAAS;IACTC,cAAc;IACdC;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,KAAK;MACnBC,YAAY,EAAE,EAAE;MAChBC,aAAa,EAAE,EAAE;MACjBC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAACC,IAAI,EAAE;MAC3B,IAAI,CAACR,YAAW,GAAI,IAAI;MACxB,IAAI,CAACC,YAAW,GAAI,EAAE;MACtB,IAAI,CAACC,aAAY,GAAI,EAAE;MACvB,IAAI,CAACC,OAAM,GAAI,EAAE;MACjB,IAAI,CAACC,YAAW,GAAI,EAAE;MACtB,IAAI,CAACC,SAAQ,GAAI,IAAI;MAErB,MAAMI,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;MAE7B,IAAI;QACF,MAAMI,QAAO,GAAI,MAAMlB,GAAG,CAACmB,IAAI,CAAC,aAAa,EAAEJ,QAAQ,EAAE;UACvDK,OAAO,EAAE;YAAE,cAAc,EAAE;UAAsB;QACnD,CAAC,CAAC;QAEF,IAAIF,QAAQ,CAACb,IAAI,CAACgB,OAAO,EAAE;UACzB,IAAI,CAACV,SAAQ,GAAIO,QAAQ,CAACb,IAAI,CAACgB,OAAO;UACtC,IAAI,CAACC,iBAAiB,CAAC,CAAC;QAC1B,OAAO;UACL,IAAI,CAAChB,YAAW,GAAI,KAAK;UACzB,IAAI,CAACC,YAAW,GAAI,sBAAsB;QAC5C;MACF,EAAE,OAAOgB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C,IAAI,CAACjB,YAAW,GAAI,KAAK;QACzB,IAAI,CAACC,YAAW,GAAI,yCAAyC;MAC/D;IACF,CAAC;IAED,MAAMe,iBAAiBA,CAAA,EAAG;MACxB,MAAMG,QAAO,GAAIC,WAAW,CAAC,YAAY;QACvC,IAAI;UACF,MAAMC,cAAa,GAAI,MAAM3B,GAAG,CAAC4B,GAAG,CAAC,qBAAqB,IAAI,CAACjB,SAAS,EAAE,CAAC;UAE3E,IAAIgB,cAAc,CAACtB,IAAI,CAACwB,MAAK,KAAM,WAAW,EAAE;YAC9C,IAAI,CAACrB,aAAY,GAAImB,cAAc,CAACtB,IAAI,CAACG,aAAa;YACtD,IAAI,CAACC,OAAM,GAAIkB,cAAc,CAACtB,IAAI,CAACI,OAAO;YAC1C,IAAI,CAACC,YAAW,GAAIiB,cAAc,CAACtB,IAAI,CAACyB,aAAa;YAErD,IAAI,CAACxB,YAAW,GAAI,KAAK;YACzByB,aAAa,CAACN,QAAQ,CAAC;UACzB;QACF,EAAE,OAAOF,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAClD;MACF,CAAC,EAAE,IAAI,CAAC,EAAE;IACZ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
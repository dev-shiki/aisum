{"ast":null,"code":"import api from \"../api/axios\";\nimport UploadBox from \"../components/UploadBox.vue\";\nimport SummaryDisplay from \"../components/SummaryDisplay.vue\";\nimport LoadingSpinner from \"../components/LoadingSpinner.vue\";\nexport default {\n  components: {\n    UploadBox,\n    SummaryDisplay,\n    LoadingSpinner\n  },\n  data() {\n    return {\n      isProcessing: false,\n      isLongProcessing: false,\n      isDelayed: false,\n      processingMessage: \"Mengunggah file...\",\n      errorMessage: \"\",\n      transcription: \"\",\n      summary: \"\",\n      finalSummary: \"\",\n      requestId: null,\n      pollingInterval: null,\n      elapsedTime: 0,\n      maxWaitTime: 1800,\n      // Maksimal waktu tunggu (10 menit)\n      retryCount: 0,\n      backoffDelay: 5000 // Delay default untuk polling (5 detik)\n    };\n  },\n  methods: {\n    async handleFileUpload(file) {\n      this.resetState();\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      try {\n        const response = await api.post(\"/api/summarize/\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        if (response.data.error) {\n          this.errorMessage = response.data.error;\n          this.isProcessing = false;\n        } else {\n          this.requestId = response.data.task_id;\n          this.processingMessage = \"File diunggah! Menunggu pemrosesan...\";\n          this.pollBackendStatus();\n        }\n      } catch (error) {\n        this.errorMessage = \"‚ö†Ô∏è Server sedang sibuk. Mohon tunggu...\";\n        this.isProcessing = false;\n      }\n    },\n    async pollBackendStatus() {\n      if (!this.requestId) return;\n      this.pollingInterval = setInterval(async () => {\n        try {\n          const statusResponse = await api.get(`/api/summarize/status/${this.requestId}`);\n          console.log(\"üì° Polling Response:\", statusResponse.data);\n          if (statusResponse.data.status === \"completed\") {\n            this.transcription = statusResponse.data.transcription;\n            this.summary = statusResponse.data.summary;\n            this.finalSummary = statusResponse.data.final_summary;\n            this.isProcessing = false;\n            this.processingMessage = \"‚úÖ Pemrosesan selesai!\";\n            clearInterval(this.pollingInterval);\n          } else if (statusResponse.data.status === \"failed\") {\n            this.isProcessing = false;\n            this.errorMessage = \"‚ùå Terjadi kesalahan dalam pemrosesan.\";\n            clearInterval(this.pollingInterval);\n          } else if (statusResponse.data.status === \"processing\") {\n            this.processingMessage = \"üì° Pemrosesan sedang berjalan...\";\n          } else if (statusResponse.data.status === \"delayed\") {\n            this.isDelayed = true;\n            this.processingMessage = \"‚è≥ Backend masih memproses...\";\n          } else {\n            this.processingMessage = \"‚è≥ Menunggu respons dari server...\";\n          }\n\n          // Handling untuk rate limit\n          if (statusResponse.status === 429) {\n            this.retryCount++;\n            this.backoffDelay *= 2; // Exponential backoff\n            this.processingMessage = `‚ö†Ô∏è Server sibuk, percobaan ke-${this.retryCount}. Menunggu ${this.backoffDelay / 1000} detik...`;\n          }\n          this.elapsedTime += this.backoffDelay / 1000;\n          if (this.elapsedTime >= 60) {\n            this.isLongProcessing = true;\n          }\n          if (this.elapsedTime >= this.maxWaitTime) {\n            this.isProcessing = false;\n            this.errorMessage = \"‚ùå Waktu tunggu habis. Coba unggah ulang file.\";\n            clearInterval(this.pollingInterval);\n          }\n        } catch (error) {\n          console.error(\"‚ùå Error checking status:\", error);\n        }\n      }, this.backoffDelay);\n    },\n    cancelProcessing() {\n      if (this.pollingInterval) {\n        clearInterval(this.pollingInterval);\n        this.pollingInterval = null;\n      }\n      this.isProcessing = false;\n      this.errorMessage = \"‚ö†Ô∏è Pemrosesan dibatalkan.\";\n      this.requestId = null;\n    },\n    resetState() {\n      this.isProcessing = true;\n      this.isLongProcessing = false;\n      this.isDelayed = false;\n      this.errorMessage = \"\";\n      this.transcription = \"\";\n      this.summary = \"\";\n      this.finalSummary = \"\";\n      this.requestId = null;\n      this.elapsedTime = 0;\n      this.retryCount = 0;\n      this.backoffDelay = 5000;\n    }\n  }\n};","map":{"version":3,"names":["api","UploadBox","SummaryDisplay","LoadingSpinner","components","data","isProcessing","isLongProcessing","isDelayed","processingMessage","errorMessage","transcription","summary","finalSummary","requestId","pollingInterval","elapsedTime","maxWaitTime","retryCount","backoffDelay","methods","handleFileUpload","file","resetState","formData","FormData","append","response","post","headers","error","task_id","pollBackendStatus","setInterval","statusResponse","get","console","log","status","final_summary","clearInterval","cancelProcessing"],"sources":["D:\\app\\meeting-summarizer\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <!-- Upload File -->\r\n      <UploadBox @file-selected=\"handleFileUpload\" />\r\n\r\n      <!-- Animasi Loading & Pesan Status -->\r\n      <LoadingSpinner v-if=\"isProcessing\" />\r\n      <p v-if=\"isProcessing\" class=\"processing-message\">‚è≥ {{ processingMessage }}</p>\r\n      <p v-if=\"isLongProcessing\" class=\"warning-message\">‚ö†Ô∏è Masih dalam antrian... Mohon tunggu.</p>\r\n      <p v-if=\"isDelayed\" class=\"delayed-message\">‚è≥ Menunggu API Response... Backend masih memproses.</p>\r\n      <p v-if=\"errorMessage\" class=\"error-message\">‚ùå {{ errorMessage }}</p>\r\n\r\n      <!-- Tombol Batalkan -->\r\n      <button v-if=\"isProcessing\" @click=\"cancelProcessing\" class=\"cancel-button\">\r\n        ‚ùå Batalkan\r\n      </button>\r\n\r\n      <!-- Output Ringkasan -->\r\n      <SummaryDisplay\r\n        v-if=\"summary && !isProcessing\"\r\n        :transcription=\"transcription\"\r\n        :summary=\"summary\"\r\n        :finalSummary=\"finalSummary\"\r\n      />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api/axios\";\r\nimport UploadBox from \"../components/UploadBox.vue\";\r\nimport SummaryDisplay from \"../components/SummaryDisplay.vue\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    UploadBox,\r\n    SummaryDisplay,\r\n    LoadingSpinner,\r\n  },\r\n  data() {\r\n    return {\r\n      isProcessing: false,\r\n      isLongProcessing: false,\r\n      isDelayed: false,\r\n      processingMessage: \"Mengunggah file...\",\r\n      errorMessage: \"\",\r\n      transcription: \"\",\r\n      summary: \"\",\r\n      finalSummary: \"\",\r\n      requestId: null,\r\n      pollingInterval: null,\r\n      elapsedTime: 0,\r\n      maxWaitTime: 1800, // Maksimal waktu tunggu (10 menit)\r\n      retryCount: 0,\r\n      backoffDelay: 5000, // Delay default untuk polling (5 detik)\r\n    };\r\n  },\r\n  methods: {\r\n    async handleFileUpload(file) {\r\n      this.resetState();\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n\r\n      try {\r\n        const response = await api.post(\"/api/summarize/\", formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n\r\n        if (response.data.error) {\r\n          this.errorMessage = response.data.error;\r\n          this.isProcessing = false;\r\n        } else {\r\n          this.requestId = response.data.task_id;\r\n          this.processingMessage = \"File diunggah! Menunggu pemrosesan...\";\r\n          this.pollBackendStatus();\r\n        }\r\n      } catch (error) {\r\n        this.errorMessage = \"‚ö†Ô∏è Server sedang sibuk. Mohon tunggu...\";\r\n        this.isProcessing = false;\r\n      }\r\n    },\r\n\r\n    async pollBackendStatus() {\r\n      if (!this.requestId) return;\r\n\r\n      this.pollingInterval = setInterval(async () => {\r\n        try {\r\n          const statusResponse = await api.get(`/api/summarize/status/${this.requestId}`);\r\n          console.log(\"üì° Polling Response:\", statusResponse.data);\r\n\r\n          if (statusResponse.data.status === \"completed\") {\r\n            this.transcription = statusResponse.data.transcription;\r\n            this.summary = statusResponse.data.summary;\r\n            this.finalSummary = statusResponse.data.final_summary;\r\n            this.isProcessing = false;\r\n            this.processingMessage = \"‚úÖ Pemrosesan selesai!\";\r\n            clearInterval(this.pollingInterval);\r\n          } \r\n          else if (statusResponse.data.status === \"failed\") {\r\n            this.isProcessing = false;\r\n            this.errorMessage = \"‚ùå Terjadi kesalahan dalam pemrosesan.\";\r\n            clearInterval(this.pollingInterval);\r\n          } \r\n          else if (statusResponse.data.status === \"processing\") {\r\n            this.processingMessage = \"üì° Pemrosesan sedang berjalan...\";\r\n          } \r\n          else if (statusResponse.data.status === \"delayed\") {\r\n            this.isDelayed = true;\r\n            this.processingMessage = \"‚è≥ Backend masih memproses...\";\r\n          } \r\n          else {\r\n            this.processingMessage = \"‚è≥ Menunggu respons dari server...\";\r\n          }\r\n\r\n          // Handling untuk rate limit\r\n          if (statusResponse.status === 429) {\r\n            this.retryCount++;\r\n            this.backoffDelay *= 2; // Exponential backoff\r\n            this.processingMessage = `‚ö†Ô∏è Server sibuk, percobaan ke-${this.retryCount}. Menunggu ${this.backoffDelay / 1000} detik...`;\r\n          }\r\n\r\n          this.elapsedTime += this.backoffDelay / 1000;\r\n          if (this.elapsedTime >= 60) {\r\n            this.isLongProcessing = true;\r\n          }\r\n          if (this.elapsedTime >= this.maxWaitTime) {\r\n            this.isProcessing = false;\r\n            this.errorMessage = \"‚ùå Waktu tunggu habis. Coba unggah ulang file.\";\r\n            clearInterval(this.pollingInterval);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"‚ùå Error checking status:\", error);\r\n        }\r\n      }, this.backoffDelay);\r\n    },\r\n\r\n    cancelProcessing() {\r\n      if (this.pollingInterval) {\r\n        clearInterval(this.pollingInterval);\r\n        this.pollingInterval = null;\r\n      }\r\n      this.isProcessing = false;\r\n      this.errorMessage = \"‚ö†Ô∏è Pemrosesan dibatalkan.\";\r\n      this.requestId = null;\r\n    },\r\n\r\n    resetState() {\r\n      this.isProcessing = true;\r\n      this.isLongProcessing = false;\r\n      this.isDelayed = false;\r\n      this.errorMessage = \"\";\r\n      this.transcription = \"\";\r\n      this.summary = \"\";\r\n      this.finalSummary = \"\";\r\n      this.requestId = null;\r\n      this.elapsedTime = 0;\r\n      this.retryCount = 0;\r\n      this.backoffDelay = 5000;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.processing-message {\r\n  color: #ff9800;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n}\r\n\r\n.warning-message {\r\n  color: #d17b00;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n}\r\n\r\n.delayed-message {\r\n  color: #007bff;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n}\r\n\r\n.cancel-button {\r\n  background-color: red;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px;\r\n  margin-top: 10px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}